{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/HomeContainer.js","Routes/Home/index.js","Routes/TV/TVPresenter.js","Routes/TV/TVContainer.js","Routes/TV/index.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","role","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","default","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","Loader","map","movie","poster_path","vote_average","release_date","api","axios","create","baseURL","params","enApi","moviesApi","get","append_to_response","term","query","decodeURIComponent","tvApi","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","tv","original_name","first_air_date","TVContainer","Header","header","List","ul","Item","li","current","SLink","Link","Nav","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","original_title","SearchContainer","event","preventDefault","searchByTerm","target","console","log","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","Imdb","TitleText","h4","Average","Videos","Block","Producer","Country","DetailPresenter","result","ytVideos","countrys","companys","backdrop_path","runtime","episode_run_time","genres","genre","index","name","imdb_id","href","overview","company","contry","video","width","height","scrolling","allowFullScreen","src","key","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","videos","production_companies","production_countries","path","exact","component","Home","TV","Search","Detail","from","globalStyle","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5d3afe7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    :not(:last-child){\n        margin-bottom:50px;\n    }\n`;\n\nconst Title = styled.span`\n    font-size:25px;\n    font-weight:600;\n`;\n\nconst Grid = styled.div`\n    margin-top:25px;\n    display:grid;\n    grid-template-columns:repeat(auto-fill,125px);\n    grid-gap: 40px;\n`;\n\nconst Section = function ({ title, children }) {\n    return (\n        <Container>\n            <Title>\n                {title}\n            </Title>\n            <Grid>\n                {children}\n            </Grid>\n        </Container>\n    )\n}\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n}\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    height:100vh;\n    width: 100vw;\n    display:flex;\n    justify-content: center;\n    font-size:30px;\n    margin-top:300px;\n`;\n\nexport default function () {\n    return <Container><span role=\"img\" aria-label=\"Loading\" ></span>Loading...</Container>\n}\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display:flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color:${function (props) { return props.color }};\n`;\n\nconst Message = function ({ text, color }) {\n  return (\n    <Container>\n      <Text color={color}>{text}</Text>\n    </Container>\n  )\n}\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n}\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    font-size:12px;\n`;\n\n\nconst Image = styled.div`\n    background-image: url(${function (props) { return props.bgUrl }});\n    width: 150px;\n    height:250px;\n    background-size: cover;\n    border-radius: 4px;\n    background-position: center center;\n    transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n    bottom:5px;\n    right:-17px;\n    position: absolute;\n    opacity:0;\n    transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n    margin-bottom:5px;\n    position:relative;\n    &:hover{\n        ${Image}{\n            opacity:0.3;\n        }\n        ${Rating}{\n            opacity:1;\n        }\n    }\n`;\n\nconst Title = styled.div`\n    display: block;\n    margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n    font-size: 10px;\n    color: rgba(255,255,255,0.5);\n`;\n\nconst Poster = function ({ id, imageUrl, title, rating, year, isMovie = false }) {\n    return (\n        <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\n            <Container>\n                <ImageContainer>\n                    <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : require(\"../assets/noPosterSmall.png\").default} />\n                    <Rating>\n                        <span role=\"img\" aria-label=\"rating\">\n                            ⭐️\n                        </span>\n                        {rating}/10\n                    </Rating>\n                </ImageContainer>\n                <Title>\n                    {title.length > 18 ? `${title.substring(0, 15)}...` : title}\n                </Title>\n                <Year>{year}</Year>\n            </Container>\n        </Link >)\n}\n\nPoster.propTypes = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool\n}\n\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\"\nimport Helmet from \"react-helmet\"\nimport Section from \"Components/Section\"\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\n\nconst Container = styled.div`\n    padding:20px;\n    \n`;\n// substring(0, 4)은 argument인 두 index 사이의 string 만 반환한다.(0~4 사이의 문자열만 반환)\nconst HomePresenter = function ({ nowPlaying, upcoming, popular, error, loading }) {\n    return <>\n        <Helmet>\n            <title>Movies | Docflix</title>\n        </Helmet>\n        {loading ? (\n            <Loader />\n        ) : (\n            <Container>\n\n                {nowPlaying && nowPlaying.length > 0 && (\n                    <Section title=\"현재 상영중\">\n                        {nowPlaying.map(function (movie) {\n                            return <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                imageUrl={movie.poster_path}\n                                title={movie.title}\n                                rating={movie.vote_average}\n                                year={movie.release_date && movie.release_date.substring(0, 4)}\n                                isMovie={true}\n                            />\n                        })}\n                    </Section>\n                )}\n                {upcoming && upcoming.length > 0 && (\n                    <Section title=\"개봉 예정\">\n                        {upcoming.map(function (movie) {\n                            return <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                imageUrl={movie.poster_path}\n                                title={movie.title}\n                                rating={movie.vote_average}\n                                year={movie.release_date && movie.release_date.substring(0, 4)}\n                                isMovie={true}\n                            />\n                        })}\n                    </Section>\n                )}\n                {popular && popular.length > 0 && (\n                    <Section title=\"인기 작품\">\n                        {popular.map(function (movie) {\n                            return <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                imageUrl={movie.poster_path}\n                                title={movie.title}\n                                rating={movie.vote_average}\n                                year={movie.release_date && movie.release_date.substring(0, 4)}\n                                isMovie={true}\n                            />\n                        })}\n                    </Section>\n                )}\n                {error && <Message color=\"#e74c3c\" text={error} />}\n            </Container>\n        )}\n    </>\n}\n\n\nHomePresenter.propTypes = {\n    nowPlaying: PropTypes.array,\n    upcoming: PropTypes.array,\n    popular: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n}\n\nexport default HomePresenter;","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n    params: {\n        \"api_key\": '483c908ded990efd74755312dd6c1015',\n        \"language\": \"ko\",\n    }\n});\n\nconst enApi = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n    params: {\n        \"api_key\": '483c908ded990efd74755312dd6c1015',\n        \"language\": \"en-US\",\n    }\n});\n\nexport const moviesApi = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: (id) =>\n        api.get(`movie/${id}`, {\n            params: {\n                append_to_response: \"videos\"\n            }\n\n        }),\n    search: term =>\n        api.get(\"search/movie\", {\n            params: {\n                query: decodeURIComponent(term)\n            }\n        })\n\n}\n\nexport const tvApi = {\n    topRated: () => enApi.get(\"tv/top_rated\"),\n    popular: () => enApi.get(\"tv/popular\"),\n    airingToday: () => enApi.get(\"tv/airing_today\"),\n    tvDetail: (id) =>\n        enApi.get(`tv/${id}`, {\n            params: {\n                append_to_response: \"videos\"\n            }\n        }),\n    search: term =>\n        enApi.get(\"search/tv\", {\n            params: {\n                query: decodeURIComponent(term)\n            }\n        })\n}","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"../../api\";\n\n// 컨테이너 프리젠터 패턴이란?\n\n// 컨테이너(Container) : data와 state(상태값)를 가지고, api를 호출하고, 기타 모든 로직들을 처리한다.\n// (데이터를 받아와서 처리하는 것을 담당함)\n\n// 프리젠터(Presenter) : 컨테이너가 처리한 데이터들을 화면에 뿌려주는 역할을 하는 함수형 컴포넌트\n// 프리젠터는 state(상태값), api, 클래스 등을 다루지 않는다.\n// (데이터를 화면에 뿌려주고 스타일을 담당함)\n\nclass HomeContainer extends React.Component {\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true,\n    };\n\n    // 자바스크립트는 api response 처리가 될때 까지 기다려주지 않는다. 기다리라고 말해 줘야함. async/await\n    // try를 작동하고 그렇지 않다면 catch 처리 해줌, try든 catch든 실행 후 finally(loading:false)가 실행됨\n    async componentDidMount() {\n\n        try {\n\n            const { data: { results: nowPlaying } } = await moviesApi.nowPlaying();\n            const { data: { results: upcoming } } = await moviesApi.upcoming();\n            const { data: { results: popular } } = await moviesApi.popular();\n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular\n            })\n        } catch {\n            this.setState({\n                error: \"Can't find movies information\"\n            })\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        return (\n            <HomePresenter\n                nowPlaying={nowPlaying}\n                upcoming={upcoming}\n                popular={popular}\n                error={error}\n                loading={loading}\n            />\n        )\n    }\n}\nexport default HomeContainer;","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\"\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst TVPresenter = function ({ topRated, popular, airingToday, loading, error, }) {\n    return <>\n        <Helmet>\n            <title>TV Shows | Docfilx</title>\n        </Helmet>\n        {loading ? (\n            <Loader />\n        ) : (\n            <Container>\n                {topRated && topRated.length > 0 && (\n                    <Section title=\"높은 평점\">\n                        {topRated.map(function (tv) {\n                            return <Poster\n                                key={tv.id}\n                                id={tv.id}\n                                imageUrl={tv.poster_path}\n                                title={tv.original_name}\n                                rating={tv.vote_average}\n                                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n                            />\n                        })}\n                    </Section>\n                )}\n                {popular && popular.length > 0 && (\n                    <Section title=\"인기 프로그램\">\n                        {popular.map(function (tv) {\n                            return <Poster\n                                key={tv.id}\n                                id={tv.id}\n                                imageUrl={tv.poster_path}\n                                title={tv.original_name}\n                                rating={tv.vote_average}\n                                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n                            />\n                        })}\n                    </Section>\n                )}\n                {airingToday && airingToday.length > 0 && (\n                    <Section title=\"현재 방영\">\n                        {airingToday.map(function (tv) {\n                            return <Poster\n                                key={tv.id}\n                                id={tv.id}\n                                imageUrl={tv.poster_path}\n                                title={tv.original_name}\n                                rating={tv.vote_average}\n                                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n                            />\n                        })}\n                    </Section>\n                )}\n                {error && <Message color=\"#e74c3c\" text={error} />}\n            </Container>\n        )}\n    </>\n}\n\nTVPresenter.propTypes = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n}\n\nexport default TVPresenter;","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"../../api\"\n\nclass TVContainer extends React.Component {\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        loading: true,\n        error: null,\n    }\n\n    async componentDidMount() {\n        try {\n            const { data: { results: topRated } } = await tvApi.topRated();\n            const { data: { results: popular } } = await tvApi.popular();\n            const { data: { results: airingToday } } = await tvApi.airingToday();\n            this.setState({ topRated, popular, airingToday });\n        } catch {\n            this.setState({\n                error: \"Can't find TV information.\"\n            })\n\n        } finally {\n            this.setState({\n                loading: false,\n            })\n\n        }\n\n    }\n    render() {\n        const { topRated, popular, airingToday, loading, error } = this.state;\n        return <TVPresenter\n            topRated={topRated}\n            popular={popular}\n            airingToday={airingToday}\n            loading={loading}\n            error={error} />;\n    }\n}\n\nexport default TVContainer;","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n    color:white;\n    position:fixed;\n    top:0;\n    left:0;\n    width:100%;\n    height:50px;\n    display:flex;\n    align-items:center;\n    background-color: rgba(20,20,20,0.8);\n    z-index:10;\n    box-shadow: 0px 1px 5px 2px rgba(0,0,0,0.8);\n`;\n\nconst List = styled.ul`\n    display: flex;\n`;\n// styled component 사용시 html= styled.###, react method = styled(###)\nconst Item = styled.li`\n    width:80px;\n    height:50px;\n    text-align: center;\n    border-bottom:3px solid \n        ${props => props.current ? \"#3498db\" : \"transparent\"};\n    transition: border-bottom .5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height:50px;\n    display: flex;\n    align-items: center;\n    justify-content:center;\n`;\n\nconst Nav = withRouter(function ({ location: { pathname } }) {\n    return (\n        <Header>\n            <List>\n                <Item current={pathname === \"/\"}>\n                    <SLink to=\"/\">Movies</SLink>\n                </Item>\n                <Item current={pathname === \"/tv\"}>\n                    <SLink to=\"/tv\">TV</SLink>\n                </Item>\n                <Item current={pathname === \"/search\"}>\n                    <SLink to=\"/search\">Search</SLink>\n                </Item>\n            </List>\n        </Header>\n    )\n});\nexport default withRouter(Nav);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\"\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n    padding:0px 20px;\n`;\n\nconst Form = styled.form`\n    margin-bottom: 50px;\n    width:100%;\n`;\n\nconst Input = styled.input`\n    all:unset;\n    font-size: 28px;\n    width:100%;\n`;\n\nconst SearchPresenter = function (\n    {\n        movieResults,\n        tvResults,\n        searchTerm,\n        loading,\n        error,\n        handleSubmit,\n        updateTerm\n    }) {\n    return <Container>\n        <Helmet>\n            <title>Search | Docflix</title>\n        </Helmet>\n        <Form onSubmit={handleSubmit}>\n            <Input placeholder=\"Search Movies or TV Shows...\" value={searchTerm} onChange={updateTerm}></Input>\n        </Form>\n        {loading ? (\n            <Loader />\n        ) : (\n            <>\n                {movieResults && movieResults.length > 0 && (\n                    <Section title=\"Movie Results\">\n                        {movieResults.map(function (movie) {\n                            return <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                imageUrl={movie.poster_path}\n                                title={movie.title || movie.original_title}\n                                rating={movie.vote_average}\n                                year={movie.release_date && movie.release_date.substring(0, 4)}\n                                isMovie={true}\n                            />\n                        })}\n                    </Section>\n                )}\n                {tvResults && tvResults.length > 0 && (\n                    <Section title=\"TV Shows Results\">\n                        {tvResults.map(function (tv) {\n                            return <Poster\n                                key={tv.id}\n                                id={tv.id}\n                                imageUrl={tv.poster_path}\n                                title={tv.original_name || tv.title}\n                                rating={tv.vote_average}\n                                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n                            />\n                        })}\n                    </Section >\n                )}\n                {error && <Message color=\"#e74c3c\" text={error} />}\n                {\n                    tvResults &&\n                    movieResults &&\n                    tvResults.length === 0 &&\n                    movieResults.length === 0 && (\n                        <Message text=\"Nothing found\" color=\"#95a5a6\" />\n                    )}\n            </>\n        )}\n    </Container>\n}\n\nSearchPresenter.propTypes = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    searchTerm: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired,\n}\n\nexport default SearchPresenter;","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nclass SearchContainer extends React.Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        loading: false,\n        error: null,\n    }\n    //input 값으로 검색하여 리턴 값을 받을 때 작동하는 로직\n    handleSubmit = event => {\n        event.preventDefault();\n\n        const { searchTerm } = this.state;\n        if (searchTerm !== \"\") {\n            this.searchByTerm();\n        }\n    }\n\n    updateTerm = event => {\n        const { target: { value } } = event;\n\n        this.setState({ searchTerm: value });\n    }\n\n    searchByTerm = async function () {\n        const { searchTerm } = this.state;\n        this.setState({ loading: true });\n        try {\n            const { data: { results: movieResults } } = await moviesApi.search(searchTerm);\n            const { data: { results: tvResults } } = await tvApi.search(searchTerm);\n            this.setState({ movieResults, tvResults });\n        } catch {\n            this.setState({ error: \"Can't find results.\" });\n            this.setState({ loading: false });\n        } finally {\n            this.setState({ loading: false });\n        }\n    };\n\n    render() {\n        const { movieResults, tvResults, searchTerm, loading, error, } = this.state;\n        console.log(movieResults)\n        return (\n            <SearchPresenter\n                movieResults={movieResults}\n                tvResults={tvResults}\n                searchTerm={searchTerm}\n                loading={loading}\n                error={error}\n                handleSubmit={this.handleSubmit}\n                updateTerm={this.updateTerm}\n            />\n        )\n    }\n}\n\nexport default SearchContainer;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\"\nimport Helmet from \"react-helmet\"\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n    height:calc(100vh - 50px);\n    width: 100%;\n    position:relative;\n    padding:50px;\n`;\n\nconst Backdrop = styled.div`\n    position:absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${function (props) { return props.bgImage }});\n    background-position: center center;\n    background-size: cover;\n    filter: blur(3px);\n    opacity: 0.5;\n    z-index:0;\n`;\n\nconst Content = styled.div`\n    display:flex;\n    width:100%;\n    position:relative;\n    z-index: 1;\n    height:100%;\n`;\n\nconst Cover = styled.div`\n    width:30%;\n    background-image: url(${function (props) { return props.bgImage }});\n    background-position: center center;\n    background-size: cover;\n    height: 100%;\n    border-radius: 5px;\n`;\n\nconst Data = styled.div`\nwidth:66%;\nmargin-left:75px;\n`;\n\nconst Title = styled.h3`\nfont-size:35px;\n\n`;\n\nconst ItemContainer = styled.div`\nline-height:1.7;\nmargin:20px 0;\nheight: 27%;\noverflow: auto;\ntext-overflow: ellipsis;\n\n`;\n\nconst Item = styled.span`\n`;\n\nconst Divider = styled.span`\nmargin: 0 10px;\n`;\n\nconst Overview = styled.p`\nfont-size:12px;\nopacity: 0.7;\nline-height: 1.5;\nmargin-top: 10px;\n`;\n\nconst Imdb = styled.a`\nbackground-color:rgb(245, 197, 25);\npadding: 3px;\ncolor: black;\nfont-weight: bold;\nborder-radius: 3px;\n`;\n\nconst TitleText = styled.h4`\nfont-size: 22px;\npadding: 20px 0;\n`;\n\nconst Average = styled.div`\nfont-size: 20px;\nmargin-top: 5px;\n`;\n\nconst Videos = styled.div`\ndisplay: flex;\noverflow: auto;\nheight: 27%;\n`;\n\nconst Block = styled.div`\ndisplay: flex;\nwidth: 100%;\nheight: 26%;\n`;\n\nconst List = styled.li`\nfont-size: 13px;\nopacity: 0.7;\n`;\n\nconst Producer = styled.div`\nwidth: 50%;\noverflow: hidden;\ntext-overflow: ellipsis;\n`;\n\nconst Country = styled.div`\nwidth: 50%;\n`;\n\n\nconst DetailPresenter = function ({ result, error, loading, ytVideos, countrys, companys }) {\n    return loading ? (\n        <>\n            <Helmet>\n                <title>Loading | Docflix</title>\n            </Helmet>\n            <Loader />\n        </>\n    ) : <Container>\n        <Helmet>\n            <title>{result.title\n                ? result.title\n                : result.original_name} | Docflix</title>\n        </Helmet>\n        <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\n        <Content>\n            <Cover bgImage={result.poster_path\n                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                : require(\"../../assets/noPosterSmall.png\")}\n            />\n            <Data>\n                <Title>{result.title\n                    ? result.title\n                    : result.original_name}\n                </Title>\n                <ItemContainer>\n                    <Item>{result.release_date\n                        ? result.release_date.substring(0, 4)\n                        : result.first_air_date.substring(0, 4)}\n                    </Item>\n                    <Divider>•</Divider>\n                    <Item>{result.runtime\n                        ? result.runtime\n                        : result.episode_run_time} min\n                    </Item>\n                    <Divider>•</Divider>\n                    <Item>\n                        {result.genres && result.genres.map(function (genre, index) {\n                            return index === result.genres.length - 1 ? genre.name : <span key={genre.id} >{`${genre.name} / `}</span>;\n                        })}\n                    </Item>\n                    <Item>\n                        {result.imdb_id ? <>\n                            <Divider>•</Divider>\n                            <Imdb href={`https://www.imdb.com/title/${result.imdb_id}/`}>IMDb</Imdb>\n                        </> : \"\"}\n                    </Item>\n                    <Average>{result.vote_average && `⭐️ ${result.vote_average}`}</Average>\n                    <Overview>\n                        {result.overview}\n                    </Overview>\n                </ItemContainer>\n                <hr />\n                <Block>\n                    <Producer>\n                        <TitleText>제작사</TitleText>\n                        {companys && companys.map(function (company) {\n                            return (\n                                <List key={company.id}>{company.name}</List>\n                            );\n                        })}\n                    </Producer>\n                    <Country>\n                        <TitleText>제작국</TitleText>\n                        {countrys && countrys.map(function (contry) {\n                            return (\n                                <List key={contry.id}>{contry.name}</List>\n                            );\n                        })}\n                    </Country>\n                </Block>\n                <hr />\n                <TitleText>트레일러</TitleText>\n                <Videos>\n                    {ytVideos && ytVideos.map(function (video) {\n                        return (\n                            <iframe\n                                key={video.id}\n                                title={video.name}\n                                width=\"330\"\n                                height=\"155\"\n                                scrolling=\"yes\"\n                                allowFullScreen={true}\n                                src={`https://www.youtube.com/embed/${video.key}`}>\n                            </iframe>\n                        )\n                    })}\n                </Videos>\n            </Data>\n        </Content>\n    </Container >;\n}\n\nDetailPresenter.propTypes = {\n    result: PropTypes.object,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n}\n\nexport default DetailPresenter;","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nclass DetailContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        const {\n            location: { pathname }\n        } = props;\n        this.state = {\n            result: null,\n            companys: null,\n            countrys: null,\n            ytVideos: null,\n            error: null,\n            loading: true,\n            isMovie: pathname.includes(\"/movie/\")\n        };\n    }\n\n    async componentDidMount() {\n        const {\n            match: {\n                params: { id }\n            },\n            history: { push },\n            location: { pathname }\n        } = this.props;\n        const { isMovie } = this.state;\n        //parseInt()는 string을 int로 변환한다. \n        const parsedId = parseInt(id);\n        if (isNaN(parsedId)) {\n            return push(\"/\");\n        }\n        let result = null;\n        let ytVideos = null;\n        let companys = null;\n        let countrys = null;\n        try {\n            if (isMovie) {\n                ({\n                    data: result,\n                    data: { videos: { results: ytVideos } },\n                    data: { production_companies: companys },\n                    data: { production_countries: countrys }\n\n                } = await moviesApi.movieDetail(parsedId));\n\n            } else {\n                ({\n                    data: result,\n                    data: { videos: { results: ytVideos } },\n                    data: { production_companies: companys },\n                    data: { production_countries: countrys }\n\n                } = await tvApi.tvDetail(parsedId));\n\n            }\n\n        } catch {\n            this.setState({ error: \"Can't find anything.\" })\n        } finally {\n            this.setState({ loading: false, result, ytVideos, companys, countrys });\n        }\n    }\n\n    render() {\n        const { result, error, loading, ytVideos, companys, countrys } = this.state;\n        console.log(result)\n        return (\n            <DetailPresenter\n                result={result}\n                error={error}\n                loading={loading}\n                companys={companys}\n                countrys={countrys}\n                ytVideos={ytVideos}\n            />\n        )\n    }\n}\nexport default DetailContainer;","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Header from \"Components/Header\";\nimport Search from \"Routes/Search/SearchContainer\";\nimport Detail from \"Routes/Detail/DetailContainer\";\n\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function () {\n    return (\n        <Router>\n            <>\n                <Header />\n                <Switch>\n                    <Route path=\"/\" exact component={Home} />\n                    <Route path=\"/tv\" exact component={TV} />\n                    <Route path=\"/search\" exact component={Search} />\n                    <Route path=\"/movie/:id\" component={Detail} />\n                    <Route path=\"/tv/:id\" component={Detail} />\n                    <Redirect from=\"*\" to=\"/\" />\n                </Switch>\n            </>\n        </Router>\n    )\n}","import { createGlobalStyle } from \"styled-components\"\nimport reset from \"styled-reset\"\n\nconst globalStyle = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20,20,20,1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyle;","import React, { Component } from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}